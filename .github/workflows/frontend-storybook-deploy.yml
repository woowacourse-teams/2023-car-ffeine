name: storybook-deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Set up Repository
        uses: actions/checkout@v3

      - name: Set up Node 18.16.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm  install
        run: npm install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: npm build
        run: npm run build-storybook

      - name: Deploy Prod use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.SERVER_USERNAME }}
          host: ${{ secrets.DEV_HOST }}
          key: ${{ secrets.SERVER_KEY }}
          source: "storybook-static/*"
          strip_components: 1
          target: "/home/ubuntu/storybook"
#      - name: Log in to Docker Hub
#        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#      - uses: actions/checkout@v3

#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: woowacarffeine/frontend-storybook

#      - name: Build and push Docker image
#        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
#        with:
#          context: ./frontend
#          file: ./frontend/StorybookDockerfile
#          push: true
#          tags: woowacarffeine/frontend-storybook:latest
#          labels: ${{ steps.meta.outputs.labels }}

#      - name: docker stop
#        run: |
#          sudo docker stop frontend-storybook || true
#          sudo docker pull woowacarffeine/frontend-storybook:latest
#
#          sudo docker run --rm -d -p 3000:3000 \
#          --name frontend-storybook \
#          woowacarffeine/frontend-storybook:latest
#
#          sudo docker image prune -f
